//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file   RelateCamera.cpp
//!
//! @brief  カメラ関連のソースファイル
//!
//! @date   2017.10.01
//!
//! @author GF1.21.深草直斗
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// ヘッダファイルの読み込み ================================================
#include "GameMain.h"
#include "RelateCamera.h"
#include "RelatePlayer.h"
#include "RelateStage.h"


// データ型の定義 ==========================================================




// 定数の定義 ==============================================================




// グローバル変数の定義 ====================================================

// <カメラ座標>
Vec2D g_cameraPos;


// 関数のプロトタイプ宣言 ==================================================




// 関数の定義 ==============================================================
//----------------------------------------------------------------------
//! @brief カメラの初期化処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void InitializeCamera(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//カメラの座標
	g_cameraPos.x = 0.0f;
	g_cameraPos.y = 0.0f;

}



//----------------------------------------------------------------------
//! @brief カメラの更新処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void UpdateCamera(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//プレイヤーの移動に合わせたカメラの移動
	g_cameraPos.x = g_player.dataPos.x - g_player.pos.x;

	//カメラの制限
	if (g_cameraPos.x >= (STAGE_WIDTH*STAGE_SIZE) - CAMERA_WIDTH)	//ステージ端に到着
	{
		g_cameraPos.x = (float)((STAGE_WIDTH*STAGE_SIZE) - CAMERA_WIDTH);
	}
	if (g_cameraPos.x <= 0)
	{
		g_cameraPos.x = 0.0f;
	}
}
